---
version: "3"
services:
  ferdi:
    hostname: "ferdi"
    container_name: "ferdi"
    environment:
      - "PGID=${ID}"
      - "PUID=${ID}"
      - "TZ=${TZ}"
      - "UMASK=${UMASK}"
      - "NODE_ENV=development"
      - "CONNECT_WITH_FRANZ=true"
      - "EXTERNAL_DOMAIN=ferdi.${DOMAIN}"
      - "IS_CREATION_ENABLED=${FERDI_CREATION}"
      - "IS_REGISTRATION_ENABLED=${FERDI_REGISTRATION}"
      - "IS_DASHBOARD_ENABLED=${FERDI_DASHBOARD}"
    image: "getferdi/ferdi-server"
    restart: "${RESTARTAPP}"
    volumes:
      - "${APPFOLDER}/ferdi/:/config"
      - "${APPFOLDER}/ferdi/database:/app/database"
      - "${APPFOLDER}/ferdi/recipes:/app/recipes"
    networks:
      - ${DOCKERNETWORK}
    security_opt:
      - "${SECURITYOPS}:${SECURITYOPSSET}"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "dockupdater.enable=true"
      - "traefik.http.routers.ferdi-rtr.entrypoints=https"
      - "traefik.http.routers.ferdi-rtr.rule=Host(`ferdi.${DOMAIN}`)"
      - "traefik.http.routers.ferdi-rtr.tls=true"
      - "traefik.http.routers.ferdi-rtr.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.ferdi-rtr.middlewares=chain-no-auth@file"
      - "traefik.http.routers.ferdi-rtr.service=ferdi-svc"
      - "traefik.http.services.ferdi-svc.loadbalancer.server.port=80"
networks:
  proxy:
    driver: bridge
    external: true
#"

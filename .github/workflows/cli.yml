---
name: Run CLI
on:
  push:
    branches: [master]
  workflow_dispatch:

#    branches-ignore:
#      - 'dependabot/**'
#      - 'dev'
#      - 'all-contributors/**'
#      - 'mergify/**'
#    tags-ignore:
#      - 'v*.*.*'
#  workflow_dispatch:

jobs:
  GHRC:
    name: Create Docker Image for wiki
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Get Repository Info
        uses: FranzDiebold/github-env-vars-action@v2.3.0

      - name: Print environment variables
        run: |
          echo "CI_REPOSITORY_NAME=$CI_REPOSITORY_NAME"
          echo "CI_REF_NAME=$CI_REF_NAME"
          echo "CI_RUN_NUMBER=$CI_RUN_NUMBER"

      - name: Prepare GHRC.io
        id: prep
        run: |
          REPO=$CI_REPOSITORY_NAME
          VERSION=$CI_REF_NAME
          DOCKER_IMAGE=${{ github.repository_owner }}/${REPO}
          if [ "$CI_REF_NAME" == "master" ];then VERSION=latest;fi
          RUNNERNR=$CI_RUN_NUMBER
          CREATED=$(date +'%Y-%m-%dT%H:%M:%SZ')
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          TAGS2="${DOCKER_IMAGE}:${VERSION}-ds${RUNNERNR}"
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=tags2::${TAGS2}
          echo ::set-output name=title::${GITHUB_REPOSITORY}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::${CREATED}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/armhf,linux/arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Cache Docker layers
        uses: actions/cache@v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Build and push Image ${VERSION}
        id: docker_build
        uses: docker/build-push-action@v2.7.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./wiki/Dockerfile
          platforms: linux/amd64,linux/armhf,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          tags: ghcr.io/${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ steps.prep.outputs.title }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}

      - name: Build and push version ${RUNNERNR}
        id: docker_build_day
        uses: docker/build-push-action@v2.7.0
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./wiki/Dockerfile
          platforms: linux/amd64,linux/armhf,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          tags: ghcr.io/${{ steps.prep.outputs.tags2 }}
          labels: |
            org.opencontainers.image.title=${{ steps.prep.outputs.title }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build:
    needs: GHRC
    name: Generate new tag
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: '0'

      - name: Bump version and push tag
        uses: ChloePlanet/github-tag-action@2.0.3
        with:
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.CR_PAT }}
          WITH_V: true

  addcon:
    needs: [ GHRC , build ]
    name: Add all Contributors to ReadME
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: '0'

      - uses: BobAnkh/add-contributors@master
        with:
          CONTRIBUTOR: '### Contributors'
          COLUMN_PER_ROW: '4'
          ACCESS_TOKEN: ${{secrets.CR_PAT}}
          IMG_WIDTH: '50'
          FONT_SIZE: '14'
          PATH: '/README.md'
          COMMIT_MESSAGE: 'docs(README): update contributors'
          AVATAR_SHAPE: 'round'

  addwiki:
    needs: [ GHRC , build , addcon ]
    name: Add all Contributors to wiki
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: '0'

      - uses: BobAnkh/add-contributors@master
        with:
          CONTRIBUTOR: '### Contributors'
          COLUMN_PER_ROW: '4'
          ACCESS_TOKEN: ${{secrets.CR_PAT}}
          IMG_WIDTH: '50'
          FONT_SIZE: '14'
          PATH: '/wiki/docs/index.md'
          COMMIT_MESSAGE: 'docs(README): update contributors'
          AVATAR_SHAPE: 'round'

  deploy:
    needs: [ GHRC , build , addcon , addwiki ]
    name: Deploy Dockserver Wiki on GitHub Pages
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: '0'

      - name: Set up Python
        uses: actions/setup-python@v2.3.0
        with:
          python-version: 3.x

      - run: python3 -m pip install --upgrade pip
      - run: python3 -m pip install --upgrade --force-reinstall -r wiki/requirements.txt
      - run: mkdocs gh-deploy --force --config-file wiki/mkdocs.yml --remote-branch wiki

  discord:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs:
      - GHRC
      - deploy
      - build
      - addcon
      - addwiki
    if: ${{ success() }}
    steps:
      - name: Notify
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.CR_PAT }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          username: 'DockServer-Bot'
          avatar-url: 'https://octodex.github.com/images/Terracottocat_Single.png'
          title: 'DockServer-Bot: {{STATUS}}'
          description: 'DockServer-Bot trigged this {{STATUS}}!'
          include-details: 'true'
          color-success: '#4287f5'
          color-failure: 'eb4034'
          color-cancelled: '0x42daf5'

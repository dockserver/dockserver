---
version: '3.3'
services:
  socket-proxy:
    image: 'ghcr.io/tecnativa/docker-socket-proxy:latest'
    hostname: 'socket-proxy'
    container_name: 'socket-proxy'
    restart: 'always'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    environment:
      - 'TZ=${TZ}'
      - 'LOG_LEVEL=info'
      - 'EVENTS=1'
      - 'PING=1'
      - 'VERSION=1'
      - 'AUTH=0'
      - 'SECRETS=0'
      - 'POST=1' # Dockupdater
      - 'DELETE=1' # Dockupdater
      - 'BUILD=0'
      - 'COMMIT=0'
      - 'CONFIGS=0'
      - 'CONTAINERS=1' # Traefik
      - 'DISTRIBUTION=0'
      - 'EXEC=0'
      - 'IMAGES=1' # Dockupdater
      - 'INFO=0'
      - 'NETWORKS=1' # Dockupdater
      - 'NODES=0'
      - 'PLUGINS=0'
      - 'SERVICES=0'
      - 'SESSION=0'
      - 'SWARM=0'
      - 'SYSTEM=0'
      - 'TASKS=0'
      - 'VOLUMES=0'
      - 'CONTAINERS_CREATE=1' # Dockupdater
      - 'CONTAINERS_START=1' # Dockupdater
      - 'CONTAINERS_UPDATE=1' # Dockupdater
      - 'CONTAINERS_DELETE=1' # Dockupdater
      - 'IMAGES_DELETE=1' # Dockupdater
    networks:
      - socket-proxy
    security_opt:
      - 'no-new-privileges:true'
    labels:
      - 'dockupdater.enable=true'
    healthcheck:
      test: 'wget --spider http://localhost:2375/version || exit 1'
      interval: '60s'
      timeout: '10s'
      retries: 3
      start_period: '20s'
  traefik:
    container_name: 'traefik'
    image: 'traefik:latest'
    restart: 'unless-stopped'
    command:
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=false
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      - --entryPoints.traefik.address=:8080
      - --api=true
      - --api.insecure=false
      - --api.dashboard=true
      - --serversTransport.insecureSkipVerify=true
      - --log=true
      - --log.level=ERROR
      - --accessLog=true
      - --accessLog.filePath=/traefik.log
      - --accessLog.bufferingSize=100
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.endpoint=tcp://socket-proxy:2375
      - --providers.docker.exposedByDefault=false
      - --entrypoints.https.http.middlewares=chain-authelia@file
      - --entrypoints.https.http.tls.certresolver=dns-cloudflare
      - --entrypoints.https.http.tls.domains[0].main=${DOMAIN}
      - --entrypoints.https.http.tls.domains[0].sans=*.${DOMAIN}
      - --providers.docker.network=proxy
      - --providers.docker.swarmMode=false
      - --providers.file.directory=/rules
      - --providers.file.watch=true
      - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesResolvers.dns-cloudflare.acme.email=${CLOUDFLARE_EMAIL}
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.delayBeforeCheck=60
    depends_on:
      - socket-proxy
    networks:
      - proxy
      - socket-proxy
    security_opt:
      - 'no-new-privileges:true'
    volumes:
      - '${APPFOLDER}/traefik/rules:/rules'
      - '${APPFOLDER}/traefik/acme/acme.json:/acme.json'
      - '${APPFOLDER}/traefik/traefik.log:/traefik.log'
    environment:
      - 'PGID=${ID}'
      - 'PUID=${ID}'
      - 'TZ=${TZ}'
      - 'CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}'
      - 'CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}'
    labels:
      - 'dockupdater.enable=true'
      - 'traefik.enable=true'
      - 'traefik.http.routers.http-catchall.entrypoints=http'
      - 'traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)'
      - 'traefik.http.routers.http-catchall.middlewares=redirect-to-https'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
      - 'traefik.http.routers.traefik-rtr.entrypoints=https'
      - 'traefik.http.routers.traefik-rtr.rule=HostHeader(`traefik.${DOMAIN}`)'
      - 'traefik.http.routers.traefik-rtr.service=api@internal'
      - 'traefik.http.routers.traefik-rtr.middlewares=chain-authelia@file'
  cloudflared:
    image: 'cloudflare/cloudflared:2021.9.1-amd64'
    hostname: 'cloudflared'
    container_name: 'cloudflared'
    command: "'tunnel' 'run' '${CLOUDFLARED_UUID}'"
    depends_on:
      - traefik
    networks:
      - proxy
      - socket-proxy
    environment:
      - 'PGID=${ID}'
      - 'PUID=${ID}'
      - 'TZ=${TZ}'
    volumes:
      - '${APPFOLDER}/cloudflared:/home/nonroot/.cloudflared'
    restart: 'always'
  cf-companion:
    container_name: 'cf-companion'
    image: 'tiredofit/traefik-cloudflare-companion:latest'
    depends_on:
      - traefik
    networks:
      - proxy
      - socket-proxy
    security_opt:
      - 'no-new-privileges:true'
    restart: 'always'
    labels:
      - 'dockupdater.enable=true'
    environment:
      - 'TIMEZONE=${TZ}'
      - 'TRAEFIK_VERSION=2'
      - 'CF_EMAIL=${CLOUDFLARE_EMAIL}'
      - 'CF_TOKEN=${CLOUDFLARE_API_KEY}'
      - 'TARGET_DOMAIN=${DOMAIN}'
      - 'DOMAIN1=${DOMAIN}'
      - 'DOMAIN1_ZONE_ID=${DOMAIN1_ZONE_ID}'
      - 'DOMAIN1_PROXIED=TRUE'
      - 'DEFAULT_TTL=1'
      - 'REFRESH_ENTRIES=TRUE'
      - 'DOCKER_ENTRYPOINT=tcp://socket-proxy:2375'
      - 'SWARM_MODE=FALSE'
  traefik-error-pages:
    container_name: 'traefik-error-pages'
    image: 'guillaumebriday/traefik-custom-error-pages'
    restart: 'unless-stopped'
    networks:
      - proxy
    environment:
      - 'PGID=${ID}'
      - 'PUID=${ID}'
      - 'TZ=${TZ}'
    labels:
      - 'traefik.enable=true'
      - 'dockupdater.enable=true'
      - 'traefik.docker.network=proxy'
      - 'traefik.http.routers.traefik-error-pages-rtr.entrypoints=http'
      - 'traefik.http.routers.traefik-error-pages-rtr.rule=HostRegexp(`{host:.+}`)'
      - 'traefik.http.routers.traefik-error-pages-rtr.priority=1'
      - 'traefik.http.routers.traefik-error-pages-rtr.middlewares=traefik-error-pages'
      - 'traefik.http.routers.traefik-error-pages-rtr.middlewares=chain-authelia@file'
      - 'traefik.http.routers.traefik-error-pages-rtr.service=traefik-error-pages-svc'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.traefik-error-pages.errors.service=traefik-error-pages-svc'
      - 'traefik.http.middlewares.traefik-error-pages.errors.status=401,403,404,429,500,502,503'
      - 'traefik.http.middlewares.traefik-error-pages.errors.query=/{status}.html'
      - 'traefik.http.services.traefik-error-pages-svc.loadbalancer.server.port=80'
  authelia:
    container_name: 'authelia'
    image: 'authelia/authelia:latest'
    restart: 'always'
    depends_on:
      - traefik
    networks:
      - proxy
    volumes:
      - '${APPFOLDER}/authelia:/config'
    environment:
      - 'PGID=${ID}'
      - 'PUID=${ID}'
      - 'TZ=${TZ}'
    labels:
      - 'traefik.enable=true'
      - 'dockupdater.enable=true'
      - 'traefik.docker.network=proxy'
      - 'traefik.http.routers.authelia-rtr.entrypoints=https'
      - 'traefik.http.routers.authelia-rtr.rule=Host(`authelia.${DOMAIN}`)'
      - 'traefik.http.routers.authelia-rtr.tls=true'
      - 'traefik.http.routers.authelia-rtr.service=authelia-svc'
      - 'traefik.http.services.authelia-svc.loadbalancer.server.port=9091'
networks:
  proxy:
    driver: bridge
    external: true
  socket-proxy:
    driver: bridge
    external: true
